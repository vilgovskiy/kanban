{"version":3,"sources":["axios-api.tsx","reducers/tasks-reducer.tsx","context/tasks-context.tsx","components/TaskForm/TaskForm.tsx","components/Board/KanBanCard/KanBanCard.tsx","components/Board/KanBanColumn/KanBanColumn.tsx","components/AccessControl/AccessControl.tsx","components/Board/KanBanBoard/KanBanBoard.tsx","reducers/user-reducer.tsx","context/user-context.tsx","components/Toolbar/Toolbar.tsx","components/Board/KanBan.tsx","components/UI/Spinner/Spinner.tsx","components/LogInForm/LogInForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["instance","axios","create","baseURL","headers","tasksReducer","state","action","type","dragOverColumn","column","taskToUPD","Object","values","tasks","filter","task","id","taskID","tasksUPD","loading","newTask","tasksEdit","updatedTask","tasksUpd","task_id","initState","0","title","description","severity","1","2","3","TasksContext","React","createContext","tasksState","tasksDispatch","TasksContextProvider","children","useReducer","dispatch","Provider","value","initFormState","TaskForm","props","useContext","useState","taskForm","setTaskForm","error","setError","useEffect","inputChangeHandler","event","field","newValue","target","newTaskForm","length","className","onClick","formCloseHandler","onSubmit","e","preventDefault","placeholder","onChange","data","query","encodeURIComponent","board_id","post","then","resp","respData","add_task","decodeURIComponent","catch","err","console","log","update_task","errors","message","severity_class_mapping","KanBanCard","expandState","setExpand","editFormActive","setEditFormActive","displayDescription","substring","editFormComponent","severityBasedStyle","draggable","onDragEnd","size","onTaskDelete","KanbanColumn","onDragEnter","columnId","name","map","AccessControl","addUserNameState","setAddUserName","currentUsers","setCurrentUsers","get","users_on_board","user","user_id","Fragment","closeHandler","add_user_to_board","remove_user_from_board","removeUserFromBoardHandler","columns","Board","userID","board","boardDelete","boardLeave","fetchTasks","accessControlActive","setAccessControlActive","onDragEnterHandler","columnID","onDragEndHandler","respdata","move_task","taskDeleteHandler","delete_task","accessControlElement","boardControls","isOwner","memo","oldProps","nextProps","initActiveBoard","loaded","loggedIn","username","boards","activeBoard","userReducer","owner","boardsUpdAdd","boardsUpdDel","UserContext","userState","userDispatch","UserContextProvider","Toolbar","boardSelection","setBoardSelection","undefined","find","boardCreateInput","setBoardCreateInput","dynamicStyle","color","boardCreationElement","createHandler","style","boardSelectionElement","loadHandler","verticalAlign","logOutHandler","KanBan","tasks_on_board","i","newBoardname","add_board","key","findIndex","Spinner","password","LogInForm","logInForm","setLogInForm","setErrors","setMessage","setLoading","newLogInForm","validateForm","mode","newErrors","includes","keys","errorKey","required","htmlFor","auth","errToSet","join","LOGIN","add_user","errorMsg","SIGNUP","App","display","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83bd5da7.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://vilgovskiy-kanban.herokuapp.com\",\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n    }\r\n})\r\n\r\nexport default instance;","interface Task {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  severity: number;\r\n  column: number;\r\n}\r\n\r\ninterface State {\r\n  loading: boolean;\r\n  dragOverColumn: number;\r\n  tasks: { [id: number]: Task };\r\n}\r\n\r\nconst tasksReducer = (state: State, action: any) => {\r\n  switch (action.type) {\r\n    case \"DRAG_UPDATE\":\r\n      return { ...state, dragOverColumn: action.column };\r\n    case \"TASK_UPDATE\":\r\n      const taskToUPD = Object.values(state.tasks).filter(\r\n        (task) => task.id === action.taskID\r\n      )[0];\r\n      taskToUPD.column = state.dragOverColumn;\r\n      const tasksUPD = { ...state.tasks, [taskToUPD.id]: taskToUPD };\r\n      return { ...state, tasks: tasksUPD };\r\n    case \"TASKS_FETCH_START\":\r\n      return { ...state, loading: true };\r\n    case \"TASKS_FETCH\":\r\n      return { ...state, tasks: action.tasks, loading: false };\r\n    case \"ADD_TASK\":\r\n      return {\r\n        ...state,\r\n        tasks: { ...state.tasks, [action.newTask.id]: action.newTask },\r\n      };\r\n    case \"EDIT_TASK\":\r\n      const tasksEdit ={...state.tasks}\r\n      tasksEdit[action.updatedTask.id] = action.updatedTask;\r\n      return {...state, tasks: tasksEdit} \r\n    case \"DELETE_TASK\":\r\n      const tasksUpd = {...state.tasks};\r\n      delete tasksUpd[action.task_id];\r\n      return {...state, tasks: tasksUpd}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tasksReducer;\r\n","import React, { useReducer } from \"react\";\r\nimport tasksReducer from \"../reducers/tasks-reducer\";\r\n\r\nconst initState = {\r\n  loading: false,\r\n  dragOverColumn: -1,\r\n  tasks: {\r\n    0: {\r\n      id: 0,\r\n      title: \"task0\",\r\n      description: \"Task 0\",\r\n      severity: 0,\r\n      column: 1,\r\n    },\r\n    1: {\r\n      id: 1,\r\n      title: \"task1\",\r\n      description: \"Task 1\",\r\n      severity: 0,\r\n      column: 0,\r\n    },\r\n    2: {\r\n      id: 2,\r\n      title: \"task2\",\r\n      description: \"Task 2\",\r\n      severity: 0,\r\n      column: 1,\r\n    },\r\n    3: {\r\n      id: 3,\r\n      title: \"task3\",\r\n      description: \"Task 3\",\r\n      severity: 0,\r\n      column: 3,\r\n    },\r\n  },\r\n};\r\n\r\ninterface Task {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  severity: number;\r\n  column: number;\r\n}\r\n\r\ninterface State {\r\n  loading: boolean;\r\n  dragOverColumn: number;\r\n  tasks: { [id: number]: Task };\r\n}\r\n\r\nexport const TasksContext = React.createContext<{\r\n  tasksState: State;\r\n  tasksDispatch: React.Dispatch<any>;\r\n}>({ tasksState: initState, tasksDispatch: () => null });\r\n\r\nconst TasksContextProvider: React.FC = ({ children }) => {\r\n  const [state, dispatch] = useReducer(tasksReducer, initState);\r\n\r\n  return (\r\n    <TasksContext.Provider\r\n      value={{ tasksState: state, tasksDispatch: dispatch }}\r\n    >\r\n      {children}\r\n    </TasksContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TasksContextProvider;\r\n","import axios from \"../../axios-api\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { TasksContext } from \"../../context/tasks-context\";\r\n\r\nimport \"./TaskForm.css\";\r\n\r\ninterface TaskFormType {\r\n  title: string;\r\n  description: string;\r\n  severity: number;\r\n}\r\n\r\ninterface Task {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  severity: number;\r\n  column: number;\r\n}\r\n\r\ninterface Props {\r\n  board_id?: number;\r\n  type: string;\r\n  task?: Task;\r\n  formCloseHandler: () => void;\r\n}\r\n\r\nconst initFormState = {\r\n  title: \"\",\r\n  description: \"\",\r\n  severity: 0,\r\n};\r\n\r\nconst TaskForm = (props: Props) => {\r\n  const { tasksDispatch } = useContext(TasksContext);\r\n  const [taskForm, setTaskForm] = useState<TaskFormType>(initFormState);\r\n  const [error, setError] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    if (props.type !== \"CREATE\" && props.task) {\r\n      setTaskForm({\r\n        title: props.task.title,\r\n        description: props.task.description,\r\n        severity: props.task.severity,\r\n      });\r\n    }\r\n  }, [props.type, props.task]);\r\n\r\n  const addTaskHandler = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    if (taskForm.title.length < 1) {\r\n      setError(\"Title must not be empty\");\r\n      return;\r\n    }\r\n    let data = {\r\n      query: `mutation{add_task(title:\"${\r\n        taskForm.title\r\n      }\",description:\"${encodeURIComponent(taskForm.description)}\",severity:${\r\n        taskForm.severity\r\n      },column:0,board:${\r\n        props.board_id\r\n      }){id,title,description,severity,column}}`,\r\n    };\r\n    axios\r\n      .post(\"/api\", data)\r\n      .then((resp) => {\r\n        const respData = resp.data;\r\n        if (respData.data.add_task !== null) {\r\n          const newTask = {\r\n            ...respData.data.add_task,\r\n            description: decodeURIComponent(respData.data.add_task.description),\r\n          };\r\n          tasksDispatch({ type: \"ADD_TASK\", newTask: newTask });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n    props.formCloseHandler();\r\n  };\r\n\r\n  const updateTaskHandler = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    if (taskForm.title.length < 1) {\r\n      setError(\"Title must not be empty\");\r\n      return;\r\n    }\r\n    let data = {\r\n      query: `mutation{update_task(id:${props.task?.id},title:\"${\r\n        taskForm.title\r\n      }\",description:\"${encodeURIComponent(taskForm.description)}\",severity:${\r\n        taskForm.severity\r\n      }){id,title,description,severity,column}}`,\r\n    };\r\n    axios\r\n      .post(\"/api\", data)\r\n      .then((resp) => {\r\n        const respData = resp.data;\r\n        if (\r\n          respData.data.update_task !== null &&\r\n          respData.data.update_task.id === props.task?.id\r\n        ) {\r\n          const updatedTask = {\r\n            ...respData.data.update_task,\r\n            description: decodeURIComponent(\r\n              respData.data.update_task.description\r\n            ),\r\n          };\r\n          tasksDispatch({ type: \"EDIT_TASK\", updatedTask: updatedTask });\r\n        } else if (respData.errors) {\r\n          console.log(respData.errors[0].message)\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n    props.formCloseHandler();\r\n  };\r\n\r\n  const inputChangeHandler = (\r\n    event: React.ChangeEvent<\r\n      HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement\r\n    >,\r\n    field: string\r\n  ) => {\r\n    let newValue =\r\n      field === \"severity\" ? +event.target.value : event.target.value;\r\n    const newTaskForm = { ...taskForm, [field]: newValue };\r\n    if (newTaskForm.title.length > 0 && error !== \"\") {\r\n      setError(\"\");\r\n    }\r\n    //   Might wanna validate inputs here\r\n    setTaskForm(newTaskForm);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"Backdrop\" onClick={props.formCloseHandler}></div>\r\n      <div className=\"TaskFormWrapper\">\r\n        <div className=\"TaskForm\">\r\n          {props.type === \"CREATE\" ? <h3>Create new task</h3>: <h3>Edit task</h3>}\r\n          <div className=\"Errors\">{error}</div>\r\n          <form onSubmit={(e) => e.preventDefault()}>\r\n            <div className=\"TaskFormElement\" id=\"TaskTitle\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Title\"\r\n                value={taskForm.title}\r\n                onChange={(event) => inputChangeHandler(event, \"title\")}\r\n              />\r\n            </div>\r\n            <div className=\"TaskFormElement\">\r\n              <textarea\r\n                placeholder=\"Description\"\r\n                value={taskForm.description}\r\n                onChange={(event) => inputChangeHandler(event, \"description\")}\r\n              />\r\n            </div>\r\n            <div className=\"TaskFormElement\">\r\n              <label>Severity</label>\r\n              <select\r\n                value={taskForm.severity}\r\n                onChange={(event) => inputChangeHandler(event, \"severity\")}\r\n              >\r\n                <option key={0} value={0}>\r\n                  Low\r\n                </option>\r\n                <option key={1} value={1}>\r\n                  Medium\r\n                </option>\r\n                <option key={2} value={2}>\r\n                  High\r\n                </option>\r\n                <option key={3} value={3}>\r\n                  Extreme\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <button className=\"General-btn Confirm-btn\" onClick={props.type === \"CREATE\" ? addTaskHandler : updateTaskHandler}>\r\n              Accept\r\n            </button>\r\n            <button className=\"General-btn Cancel-btn\" onClick={props.formCloseHandler}>\r\n              Cancel\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import React, { useState } from \"react\";\r\nimport \"./KanBanCard.css\";\r\nimport { MdEdit, MdDelete } from \"react-icons/md\";\r\nimport TaskForm from \"../../TaskForm/TaskForm\";\r\n\r\ninterface Task {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  severity: number;\r\n  column: number;\r\n}\r\n\r\ninterface Props {\r\n  task: Task;\r\n  onDragEnd: (event: React.DragEvent<HTMLDivElement>, taskID: number) => void;\r\n  onTaskDelete: (task_id: number) => void;\r\n}\r\n\r\nconst severity_class_mapping: { [id: number]: string } = {\r\n  0: \" SevLow\",\r\n  1: \" SevMedium\",\r\n  2: \" SevHigh\",\r\n  3: \" SevExtreme\",\r\n};\r\n\r\nconst KanBanCard = (props: Props) => {\r\n  const [expandState, setExpand] = useState<boolean>(false);\r\n  const [editFormActive, setEditFormActive] = useState<boolean>(false);\r\n\r\n  const expandHandler = () => setExpand(!expandState);\r\n\r\n  let displayDescription = <p>{props.task.description}</p>;\r\n  if (props.task.description.length > 60 && !expandState) {\r\n    displayDescription = (\r\n      <p className=\"Expandable\">\r\n        {props.task.description.substring(0, 60)}\r\n        <span>...</span>\r\n      </p>\r\n    );\r\n  }\r\n\r\n  const handleOpenEditForm = () => setEditFormActive(true);\r\n  const handleCloseEditForm = () => setEditFormActive(false);\r\n\r\n  const editFormComponent = editFormActive ? (\r\n    <TaskForm\r\n      type=\"EDIT\"\r\n      task={props.task}\r\n      formCloseHandler={handleCloseEditForm}\r\n    />\r\n  ) : null;\r\n\r\n  const severityBasedStyle = severity_class_mapping[props.task.severity];\r\n  return (\r\n    <div\r\n      className={\"KanBanCard\" + severityBasedStyle}\r\n      draggable={true}\r\n      onDragEnd={(e) => props.onDragEnd(e, props.task.id)}\r\n    >\r\n      <div className=\"CardTitle\">\r\n        {editFormComponent}\r\n        <h4>{props.task.title}</h4>\r\n        <div className=\"CardChangeIcons\">\r\n          <div className=\"CardChangeIcon\" onClick={handleOpenEditForm}>\r\n            <MdEdit size={20} />\r\n          </div>\r\n          <div\r\n            className=\"CardChangeIcon\"\r\n            onClick={() => props.onTaskDelete(props.task.id)}\r\n          >\r\n            <MdDelete size={20} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {props.task.description.length > 0 ? (\r\n        <div className=\"CardDescription\" onClick={expandHandler}>\r\n          {displayDescription}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanBanCard;\r\n","import React from \"react\";\r\nimport KanBanCard from \"../KanBanCard/KanBanCard\";\r\nimport \"./KanBanColumn.css\";\r\n\r\ninterface Task {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  severity: number;\r\n  column: number;\r\n}\r\n\r\ninterface Props {\r\n  name: string;\r\n  columnId: number;\r\n  tasks: Task[];\r\n  onDragEnter: (\r\n    event: React.DragEvent<HTMLDivElement>,\r\n    columnID: number\r\n  ) => void;\r\n  onDragEnd: (event: React.DragEvent<HTMLDivElement>, taskID: number) => void;\r\n  onTaskDelete: (task_id: number) => void\r\n}\r\n\r\nconst KanbanColumn = (props: Props) => {\r\n  return (\r\n    <div\r\n      className=\"KanBanColumn\"\r\n      onDragEnter={(e) => props.onDragEnter(e, props.columnId)}\r\n    >\r\n      <h3>{props.name}</h3>\r\n      <div className=\"TasksSection\">\r\n        {props.tasks.map((task) => (\r\n          <KanBanCard key={task.id} task={task} onDragEnd={props.onDragEnd} onTaskDelete={props.onTaskDelete} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanColumn;\r\n","import axios from \"../../axios-api\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { MdClose, MdDelete, MdPersonAdd, MdRemoveCircleOutline } from \"react-icons/md\";\r\n\r\nimport \"./AccessControl.css\";\r\n\r\ninterface Props {\r\n  board_id: number;\r\n  user_id: number | null;\r\n  closeHandler: () => void;\r\n}\r\n\r\ninterface User {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nconst AccessControl = (props: Props) => {\r\n  const [addUserNameState, setAddUserName] = useState<string>(\"\");\r\n  const [currentUsers, setCurrentUsers] = useState<User[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/api?query={users_on_board(board_id: ${props.board_id}){id,name}}`)\r\n      .then((resp) => {\r\n        const respData = resp.data;\r\n        if (respData.data.users_on_board != null) {\r\n          setCurrentUsers(\r\n            respData.data.users_on_board.filter(\r\n              (user: User) => user.id !== props.user_id\r\n            )\r\n          );\r\n        } else if (respData.errors) {\r\n          setError(respData.errors[0].message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setError(\"Something went horribly wrong!\");\r\n      });\r\n  }, [props.board_id, props.user_id]);\r\n\r\n  const addUserToBoardHandler = () => {\r\n    if (addUserNameState.length < 1) {\r\n      setError(\"Username can not be empty\");\r\n      return;\r\n    }\r\n    const data = {\r\n      query: `mutation{add_user_to_board(board:${props.board_id},user:\"${addUserNameState}\"){id,name}}`,\r\n    };\r\n    axios\r\n      .post(\"/api\", data)\r\n      .then((resp) => {\r\n        const respData = resp.data;\r\n        if (respData.data.add_user_to_board != null) {\r\n          setCurrentUsers([...currentUsers, respData.data.add_user_to_board]);\r\n          setError(null);\r\n        } else if (respData.errors) {\r\n          setError(respData.errors[0].message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setError(\"Something went horribly wrong\");\r\n      });\r\n  };\r\n\r\n  const removeUserFromBoardHandler = (user_id: number) => {\r\n    const data = {\r\n      query: `mutation{remove_user_from_board(user_id:${user_id},board_id:${props.board_id}){id}}`,\r\n    };\r\n    axios\r\n      .post(\"/api\", data)\r\n      .then((resp) => {\r\n        const respData = resp.data;\r\n        if (\r\n          respData.data.remove_user_from_board !== null &&\r\n          respData.data.remove_user_from_board.id === user_id\r\n        ) {\r\n          setCurrentUsers(currentUsers.filter((user) => user.id !== user_id));\r\n        } else if (respData.errors) {\r\n          setError(respData.errors[0].message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setError(\"Something went horribly wrong!\");\r\n      });\r\n  };\r\n\r\n  const userNameChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.preventDefault();\r\n    if (e.target.value.length > 0) {\r\n      setError(null);\r\n    }\r\n    setAddUserName(e.target.value);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"Backdrop\" onClick={props.closeHandler} />\r\n      <div className=\"AccessControl\">\r\n        <h3>Access Control</h3>\r\n        <div className=\"CloseIcon\" onClick={props.closeHandler}>\r\n          <MdClose size={30} />\r\n        </div>\r\n        {error ? <div className=\"Errors\">{error}</div> : null}\r\n        <div className=\"GeneralInput\">\r\n          <label>Add user</label>\r\n          <input\r\n            type=\"text\"\r\n            value={addUserNameState}\r\n            placeholder=\"Username(case sensitive)\"\r\n            onChange={userNameChangeHandler}\r\n          />\r\n          <button\r\n            // className=\"General-btn Confirm-btn\"\r\n            onClick={addUserToBoardHandler}\r\n          >\r\n            <MdPersonAdd size={30} />\r\n          </button>\r\n        </div>\r\n        <h5>Users have access to this board:</h5>\r\n        <div className=\"CurrentUsers\">\r\n          {currentUsers.map((user) => (\r\n            <div className=\"CurrentUser\" key={user.id}>\r\n              {user.name}\r\n              <button onClick={() => removeUserFromBoardHandler(user.id)}>\r\n                <MdRemoveCircleOutline size={25} />\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AccessControl;\r\n","import axios from \"../../../axios-api\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { TasksContext } from \"../../../context/tasks-context\";\r\nimport TaskForm from \"../../TaskForm/TaskForm\";\r\nimport KanbanColumn from \"../KanBanColumn/KanBanColumn\";\r\nimport {\r\n  MdAdd,\r\n  MdDelete,\r\n  MdExitToApp,\r\n  MdPeople,\r\n  MdRefresh,\r\n} from \"react-icons/md\";\r\n\r\nimport \"./KanBanBoard.css\";\r\nimport AccessControl from \"../../AccessControl/AccessControl\";\r\n\r\ninterface Column {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\ninterface BoardType {\r\n  id: number;\r\n  name: string;\r\n  isOwner: boolean;\r\n}\r\n\r\ninterface Props {\r\n  userID: number | null;\r\n  board: BoardType;\r\n  boardDelete: (board_id: number) => void;\r\n  boardLeave: (board_id: number) => void;\r\n  fetchTasks: () => void;\r\n}\r\n\r\nconst columns: Column[] = [\r\n  { id: 0, name: \"Backlog\" },\r\n  { id: 1, name: \"Assigned\" },\r\n  { id: 2, name: \"In Progress\" },\r\n  { id: 3, name: \"QA\" },\r\n  { id: 4, name: \"Completed\" },\r\n];\r\n\r\nconst Board: React.FC<Props> = ({\r\n  userID,\r\n  board,\r\n  boardDelete,\r\n  boardLeave,\r\n  fetchTasks,\r\n}) => {\r\n  const { tasksState, tasksDispatch } = useContext(TasksContext);\r\n  const [taskForm, setTaskForm] = useState<boolean>(false);\r\n  const [accessControlActive, setAccessControlActive] = useState<boolean>(\r\n    false\r\n  );\r\n\r\n  let tasks = tasksState.tasks;\r\n\r\n  const onDragEnterHandler = (\r\n    event: React.DragEvent<HTMLDivElement>,\r\n    columnID: number\r\n  ) => {\r\n    event.preventDefault();\r\n    tasksDispatch({ type: \"DRAG_UPDATE\", column: columnID });\r\n  };\r\n\r\n  const onDragEndHandler = (\r\n    event: React.DragEvent<HTMLDivElement>,\r\n    taskID: number\r\n  ) => {\r\n    event.preventDefault();\r\n    if (tasksState.tasks[taskID].column !== tasksState.dragOverColumn) {\r\n      const data = {\r\n        query: `mutation {\r\n        move_task(task_id:${taskID}, column:${tasksState.dragOverColumn}){\r\n          id,\r\n          title,\r\n          description,\r\n          severity,\r\n          column\r\n        }\r\n      }`,\r\n      };\r\n      axios\r\n        .post(\"/api\", data)\r\n        .then((resp) => {\r\n          const respdata = resp.data;\r\n          if (\r\n            respdata.data.move_task !== null &&\r\n            respdata.data.move_task.id === taskID\r\n          ) {\r\n            tasksDispatch({ type: \"TASK_UPDATE\", taskID: taskID });\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  const taskDeleteHandler = (task_id: number) => {\r\n    const data = {\r\n      query: `mutation{delete_task(id:${task_id}){id}}`,\r\n    };\r\n    axios\r\n      .post(\"/api\", data)\r\n      .then((resp) => {\r\n        const respData = resp.data;\r\n        if (\r\n          respData.data.delete_task != null &&\r\n          respData.data.delete_task.id === task_id\r\n        ) {\r\n          tasksDispatch({ type: \"DELETE_TASK\", task_id: task_id });\r\n        } else if (respData.errors) {\r\n          console.log(respData.errors);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const openNewTaskFormHandler = () => setTaskForm(true);\r\n  const closeNewTaskFormHandler = () => setTaskForm(false);\r\n\r\n  const openAccesControlHandler = () => setAccessControlActive(true);\r\n  const closeAccesControlHandler = () => setAccessControlActive(false);\r\n\r\n  const newTaskForm = taskForm ? (\r\n    <TaskForm\r\n      type=\"CREATE\"\r\n      board_id={board.id}\r\n      formCloseHandler={closeNewTaskFormHandler}\r\n    />\r\n  ) : null;\r\n\r\n  const accessControlElement = accessControlActive ? (\r\n    <AccessControl\r\n      user_id={userID}\r\n      board_id={board.id}\r\n      closeHandler={closeAccesControlHandler}\r\n    />\r\n  ) : null;\r\n\r\n  const boardControls = (\r\n    <div className=\"BoardControls\">\r\n      <h1>{board.name}</h1>\r\n      <div\r\n        className=\"General-btn Confirm-btn AddTask\"\r\n        onClick={openNewTaskFormHandler}\r\n      >\r\n        <MdAdd size={30} />\r\n        Add Task\r\n      </div>\r\n      <div className=\"General-btn Util-btn AddTask\" onClick={fetchTasks}>\r\n        <MdRefresh size={30} />\r\n        Refresh\r\n      </div>\r\n      {board.isOwner ? (\r\n        <React.Fragment>\r\n          <div\r\n            className=\"General-btn Cancel-btn DeleteIcon\"\r\n            onClick={() => boardDelete(board.id)}\r\n          >\r\n            <MdDelete size={30} />\r\n          </div>\r\n          <div\r\n            className=\"General-btn Warning-btn AccessControlButton\"\r\n            onClick={openAccesControlHandler}\r\n          >\r\n            <MdPeople size={30} /> Access control\r\n          </div>\r\n        </React.Fragment>\r\n      ) : (\r\n        <div\r\n          className=\"General-btn Cancel-btn LeaveButton\"\r\n          onClick={() => boardLeave(board.id)}\r\n        >\r\n          <MdExitToApp size={30} />\r\n          Leave\r\n        </div>\r\n      )}\r\n      {newTaskForm}\r\n      {accessControlElement}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"KanBanBoard\">\r\n      {boardControls}\r\n      <div className=\"Columns\">\r\n        {columns.map((column) => (\r\n          <KanbanColumn\r\n            key={column.id}\r\n            name={column.name}\r\n            columnId={column.id}\r\n            tasks={Object.values(tasks).filter(\r\n              (task) => task.column === column.id\r\n            )}\r\n            onDragEnter={onDragEnterHandler}\r\n            onDragEnd={onDragEndHandler}\r\n            onTaskDelete={taskDeleteHandler}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(\r\n  Board,\r\n  (oldProps, nextProps) => oldProps.board.id === nextProps.board.id\r\n);\r\n","interface Board {\r\n  id: number;\r\n  name: string;\r\n  isOwner: boolean;\r\n}\r\n\r\ninterface APIBoard {\r\n  id: number;\r\n  name: string;\r\n  owner: {\r\n    id: number;\r\n  };\r\n}\r\n\r\ninterface UserState {\r\n  loggedIn: boolean;\r\n  username: string;\r\n  userID: number | null;\r\n  boards: Board[];\r\n  activeBoard: {\r\n    loaded: boolean;\r\n    id: number;\r\n  };\r\n}\r\n\r\nconst initActiveBoard = {\r\n  loaded: false,\r\n  id: -1,\r\n};\r\n\r\nconst initState = {\r\n  loggedIn: false,\r\n  username: \"\",\r\n  userID: null,\r\n  boards: [],\r\n  activeBoard: initActiveBoard\r\n};\r\n\r\nconst userReducer = (state: UserState, action: any) => {\r\n  switch (action.type) {\r\n    case \"LOG_IN\":\r\n      let boards = action.user.boards.map((board: APIBoard) => ({\r\n        id: board.id,\r\n        name: board.name,\r\n        isOwner: board.owner.id === action.user.id,\r\n      }));\r\n      return {\r\n        ...state,\r\n        loggedIn: true,\r\n        userID: action.user.id,\r\n        username: action.user.name,\r\n        boards: boards,\r\n      };\r\n    case \"LOG_OUT\":\r\n      return initState;\r\n    case \"ADD_BOARD\":\r\n      let boardsUpdAdd = [...state.boards, action.board];\r\n      return { ...state, boards: boardsUpdAdd, activeBoard: {loaded: true, id: boardsUpdAdd.length - 1} };\r\n    case \"DELETE_BOARD\":\r\n      let boardsUpdDel = state.boards.filter(board => board.id !== action.board_id)\r\n      return {...state, boards: boardsUpdDel, activeBoard: initActiveBoard}\r\n    case \"SET_ACTIVE_BOARD\":\r\n      return {...state, activeBoard: { loaded: true, id: action.id}}\r\n    case \"LEAVE_BOARD\":\r\n      return {...state, boards: state.boards.filter(board => board.id !== action.board_id), activeBoard: initActiveBoard}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import React, {useReducer} from \"react\";\r\nimport userReducer from \"../reducers/user-reducer\";\r\n\r\ninterface Board {\r\n  id: number;\r\n  name: string;\r\n  isOwner: boolean;\r\n}\r\n\r\ninterface UserState {\r\n  loggedIn: boolean;\r\n  username: string;\r\n  userID: number | null;\r\n  boards: Board[];\r\n  activeBoard: {\r\n    loaded: boolean;\r\n    id: number;\r\n  }\r\n}\r\n\r\nconst initState = {\r\n  loggedIn: false,\r\n  username: \"\",\r\n  userID: null,\r\n  boards: [],\r\n  activeBoard: {\r\n    loaded: false,\r\n    id: -1\r\n  }\r\n};\r\n\r\nexport const UserContext = React.createContext<{\r\n  userState: UserState;\r\n  userDispatch: React.Dispatch<any>;\r\n}>({\r\n  userState: initState,\r\n  userDispatch: () => null,\r\n});\r\n\r\nconst UserContextProvider: React.FC = ({ children }) => {\r\n  const [state, dispatch] = useReducer(userReducer, initState);\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{ userState: state, userDispatch: dispatch }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\n\r\nexport default UserContextProvider;\r\n","import React, { CSSProperties, useEffect, useState } from \"react\";\r\nimport { MdAdd } from \"react-icons/md\";\r\nimport \"./Toolbar.css\";\r\n\r\ninterface Board {\r\n  id: number;\r\n  name: string;\r\n  isOwner: boolean;\r\n}\r\n\r\ninterface Props {\r\n  user: string;\r\n  boards: Board[];\r\n  createHandler: (newBoardName: string) => void;\r\n  loadHandler: (boardSelection: number | null) => void;\r\n  logOutHandler: () => void;\r\n}\r\n\r\nconst Toolbar = (props: Props) => {\r\n  const [boardSelection, setBoardSelection] = useState<number>(\r\n    props.boards.length > 0 ? props.boards[0].id : -1\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (\r\n      props.boards.find((board) => board.id === boardSelection) === undefined\r\n    ) {\r\n      setBoardSelection(props.boards.length > 0 ? props.boards[0].id : -1);\r\n    }\r\n  }, [props.boards, boardSelection]);\r\n\r\n  const [boardCreateInput, setBoardCreateInput] = useState<string>(\"\");\r\n\r\n  const boardSelectionChangeHandler = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ) => {\r\n    setBoardSelection(+e.target.value);\r\n  };\r\n\r\n  const boardNameInputChangeHandler = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setBoardCreateInput(event.target.value);\r\n  };\r\n\r\n  const createBoardHandler = () => {\r\n    if (boardCreateInput.length > 0) {\r\n      props.createHandler(boardCreateInput);\r\n    }\r\n  };\r\n\r\n  const dynamicStyle:CSSProperties | undefined = boardCreateInput.length === 0 ? {color: \"#efefef\"} : undefined;\r\n\r\n  const boardCreationElement = (\r\n    <div className=\"GeneralInput\" id=\"BoardCreation\">\r\n      <label>Create a board</label>\r\n      <input\r\n        type=\"text\"\r\n        value={boardCreateInput}\r\n        placeholder=\"New board name\"\r\n        onChange={boardNameInputChangeHandler}\r\n      />\r\n      <button onClick={createBoardHandler} style={dynamicStyle}>\r\n        <MdAdd size={30} />\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  const boardSelectionElement =\r\n    props.boards.length > 0 ? (\r\n      <div className=\"BoardSelection\">\r\n        <label>Or select existing:</label>\r\n        <select id=\"BoardSelection\" onChange={boardSelectionChangeHandler}>\r\n          {props.boards.map((board) => (\r\n            <option key={board.id} value={board.id}>\r\n              {board.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button\r\n          id=\"LoadBoardButton\"\r\n          onClick={() => props.loadHandler(boardSelection)}\r\n        >\r\n          Load\r\n        </button>\r\n      </div>\r\n    ) : null;\r\n\r\n  return (\r\n    <div className=\"Toolbar\">\r\n      <div className=\"ToolbarControls\">\r\n        {boardCreationElement}\r\n        {boardSelectionElement}\r\n      </div>\r\n      <div id=\"WelcomeMessage\">\r\n        <span style={{verticalAlign:\"middle\"}}>Hello {props.user}!</span>\r\n      </div>\r\n      <button className=\"LogOutButton\" onClick={props.logOutHandler}>\r\n        Log out\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport KanBanBoard from \"./KanBanBoard/KanBanBoard\";\r\nimport { UserContext } from \"../../context/user-context\";\r\nimport { TasksContext } from \"../../context/tasks-context\";\r\nimport axios from \"../../axios-api\";\r\nimport Toolbar from \"../Toolbar/Toolbar\";\r\n\r\ninterface Task {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  severity: number;\r\n  column: number;\r\n}\r\n\r\nconst KanBan: React.FC = () => {\r\n  const { userState, userDispatch } = useContext(UserContext);\r\n  const { tasksDispatch } = useContext(TasksContext);\r\n\r\n  const logOutHandler = () => {\r\n    userDispatch({ type: \"LOG_OUT\" });\r\n  };\r\n\r\n  const fetchTasks = () => {\r\n    tasksDispatch({ type: \"TASKS_FETCH_START\" });\r\n      axios\r\n        .get(\r\n          `/api?query={tasks_on_board(board_id:${\r\n            userState.boards[userState.activeBoard.id].id\r\n          }){id,title,description,severity,column}}`\r\n        )\r\n        .then((resp) => {\r\n          const respData = resp.data;\r\n          if (respData.data.tasks_on_board != null) {\r\n            const tasks: { [id: number]: Task } = {};\r\n            for (let i = 0; i < respData.data.tasks_on_board.length; i++) {\r\n              let task: Task = {\r\n                ...respData.data.tasks_on_board[i],\r\n                description: decodeURIComponent(\r\n                  respData.data.tasks_on_board[i].description\r\n                ),\r\n              };\r\n              tasks[task.id] = task;\r\n            }\r\n            tasksDispatch({ type: \"TASKS_FETCH\", tasks: tasks });\r\n          }\r\n        });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (userState.activeBoard.loaded) {\r\n      fetchTasks()\r\n    }\r\n  }, [\r\n    userState.activeBoard.id,\r\n    userState.activeBoard.loaded,\r\n    userState.boards,\r\n    tasksDispatch,\r\n  ]);\r\n\r\n  const loadBoardHandler = (boardSelection: number | null) => {\r\n    if (boardSelection != null && boardSelection > 0) {\r\n      const key =\r\n        userState.boards !== null\r\n          ? userState.boards.findIndex((board) => board.id === boardSelection)\r\n          : -1;\r\n      userDispatch({ type: \"SET_ACTIVE_BOARD\", id: key });\r\n    }\r\n  };\r\n\r\n  const createBoardHandler = (newBoardname: string) => {\r\n    if (!userState.loggedIn) return;\r\n    const data = {\r\n      query: `mutation{add_board(name:\"${newBoardname}\",owner:${userState.userID}){id,name}}`,\r\n    };\r\n    axios\r\n      .post(\"/api\", data)\r\n      .then((resp) => {\r\n        const respData = resp.data;\r\n        if (respData.data.add_board !== null) {\r\n          // Add board to user context\r\n          userDispatch({\r\n            type: \"ADD_BOARD\",\r\n            board: { ...respData.data.add_board, isOwner: true },\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const deleteBoardHandler = (board_id: number) => {\r\n    const data = {\r\n      query: `mutation{delete_board(id:${board_id}){id}}`,\r\n    };\r\n    axios\r\n      .post(\"/api\", data)\r\n      .then((resp) => {\r\n        // If succeded, dispatch a delete\r\n        if (!resp.data.errors) {\r\n          userDispatch({ type: \"DELETE_BOARD\", board_id: board_id });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const boardLeaveHandler = (board_id: number) => {\r\n    const data = {\r\n      query: `mutation{remove_user_from_board(board_id:${board_id}, user_id:${userState.userID}){id}}`,\r\n    };\r\n    axios\r\n      .post(\"/api\", data)\r\n      .then((resp) => {\r\n        console.log(resp)\r\n        const respData = resp.data;\r\n        if (\r\n          respData.data.remove_user_from_board !== null &&\r\n          respData.data.remove_user_from_board.id === userState.userID\r\n        ) {\r\n          userDispatch({ type: \"LEAVE_BOARD\", board_id: board_id });\r\n        } else if (respData.errors) {\r\n          console.log(respData.errors[0].message);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  let board =\r\n    userState.activeBoard.loaded && userState.boards !== null ? (\r\n      <KanBanBoard\r\n        userID={userState.userID}\r\n        board={userState.boards[userState.activeBoard.id]}\r\n        boardDelete={deleteBoardHandler}\r\n        boardLeave={boardLeaveHandler}\r\n        fetchTasks={fetchTasks}\r\n      />\r\n    ) : null;\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar\r\n        user={userState.username}\r\n        boards={userState.boards}\r\n        createHandler={createBoardHandler}\r\n        loadHandler={loadBoardHandler}\r\n        logOutHandler={logOutHandler}\r\n      />\r\n      {board}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanBan;\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => <div className=\"Spinner\">Loading...</div>;\r\n\r\nexport default Spinner;\r\n","import axios from \"../../axios-api\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport { UserContext } from \"../../context/user-context\";\r\n\r\nimport \"./LogInForm.css\";\r\n\r\ninterface FormState {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\ninterface Errors {\r\n  [label: string]: string;\r\n}\r\n\r\nconst initState = {\r\n  username: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst LogInForm: React.FC = () => {\r\n  const { userDispatch } = useContext(UserContext);\r\n  const [logInForm, setLogInForm] = useState<FormState>(initState);\r\n  const [errors, setErrors] = useState<Errors | null>(null);\r\n  const [message, setMessage] = useState<string | null>(null);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const inputChangeHandler = (\r\n    event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>,\r\n    field: string\r\n  ) => {\r\n    const newLogInForm = { ...logInForm, [field]: event.target.value };\r\n    //   Might wanna validate inputs here\r\n    setLogInForm(newLogInForm);\r\n  };\r\n\r\n  const validateForm = (mode: string) => {\r\n    let newErrors: Errors = {};\r\n    if (logInForm.username.length < 1) {\r\n      newErrors[\"username\"] = \"Username can not be empty\";\r\n    }\r\n    if (logInForm.username.includes(' ')){\r\n      newErrors[\"username\"] = \"Username can not contain spaces\";\r\n    }\r\n    if (mode === \"SIGNUP\" && logInForm.password.length < 6) {\r\n      newErrors[\"password\"] = \"Password must be at least 6 characters long.\";\r\n    } else if (logInForm.password.length < 1) {\r\n      newErrors[\"password\"] = \"Password can not be empty.\";\r\n    }\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const logInHandler = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    if (!validateForm(\"LOGIN\")) {\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    axios\r\n      .get(\r\n        `/api?query={auth(name:\"${logInForm.username}\",password:\"${logInForm.password}\"){id,name,boards{id,name,,owner{id}}}}`\r\n      )\r\n      .then((resp) => {\r\n        const respData = resp.data;\r\n        if (respData.data.auth !== null) {\r\n          userDispatch({ type: \"LOG_IN\", user: respData.data.auth });\r\n          // Nothing needs to be done after this despatch as component will unmount.\r\n        } else {\r\n          setMessage(null);\r\n          let errToSet = \"Could not log in, please check you username/password\";\r\n          if (respData.errors) {\r\n            errToSet = respData.errors.join(\"; \");\r\n          }\r\n          setErrors({\r\n            LOGIN: errToSet,\r\n          });\r\n          setLoading(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setErrors({ LOGIN: \"Opps something went terribly wrong!\" });\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const signupHandler = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!validateForm(\"SIGNUP\")) {\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    const data = {\r\n      query: `mutation{add_user(name:\"${logInForm.username}\",password:\"${logInForm.password}\"){id,name}}`,\r\n    };\r\n    axios\r\n      .post(\"/api\", data)\r\n      .then((resp) => {\r\n        const respData = resp.data;\r\n        if (respData.data.add_user !== null) {\r\n          setErrors(null);\r\n          setMessage(\r\n            `Successfully created user ${respData.data.add_user.name}. Now you can log in with this username: `\r\n          );\r\n        } else if (respData.errors) {\r\n          let errorMsg = \"\"\r\n          if (respData.errors[0].message.includes(\"duplicate key value\")){\r\n            errorMsg = \": User with such name already exists\" \r\n          }\r\n          setErrors({\r\n            SIGNUP: `Could not create user ${\r\n              logInForm.username\r\n            }${errorMsg}`,\r\n          });\r\n          setMessage(null);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"LogInForm\">\r\n      <h2>Hello User! </h2>\r\n      <h3>Please sign in to view boards!</h3>\r\n      <div className=\"Errors\">\r\n        {errors !== null\r\n          ? Object.keys(errors).map((errorKey) => <p key={errorKey}>{errors[errorKey]}</p>)\r\n          : null}\r\n      </div>\r\n      <div className=\"LogInMessages\">\r\n        {message !== null ? <p>{message}</p> : null}\r\n      </div>\r\n      {loading ? <Spinner /> : null}\r\n      <form>\r\n        <div className=\"LogInFormGroup\">\r\n          <input\r\n            className={errors && errors.username ? \"NeedFixing\" : \"\"}\r\n            type=\"text\"\r\n            id=\"username\"\r\n            placeholder=\"Username\"\r\n            value={logInForm.username}\r\n            onChange={(e) => inputChangeHandler(e, \"username\")}\r\n            required\r\n          />\r\n          <label htmlFor=\"username\">Username</label>\r\n        </div>\r\n        <div className=\"LogInFormGroup\">\r\n          <input\r\n            className={errors && errors.password ? \"NeedFixing\" : \"\"}\r\n            type=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n            value={logInForm.password}\r\n            onChange={(e) => inputChangeHandler(e, \"password\")}\r\n            required\r\n          />\r\n          <label htmlFor=\"password\">Password</label>\r\n        </div>\r\n        <button onClick={logInHandler}>Log in</button>\r\n        <button onClick={signupHandler}>Sign up</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogInForm;\r\n","import React, { useContext } from \"react\";\nimport \"./App.css\";\nimport KanBan from \"./components/Board/KanBan\";\nimport LogInForm from \"./components/LogInForm/LogInForm\";\nimport TasksContextProvider from \"./context/tasks-context\";\nimport {UserContext} from \"./context/user-context\";\n\nconst App: React.FC = () => {\n  const { userState } = useContext(UserContext)\n\n  const display = userState.loggedIn ? <KanBan /> : <LogInForm />\n  \n  return (\n      <TasksContextProvider>\n        <div className=\"App\">\n          {display}\n        </div>\n      </TasksContextProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport UserContextProvider from \"./context/user-context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserContextProvider>\n      <App />\n    </UserContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}